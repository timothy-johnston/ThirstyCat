#Spring Security temporarily impotent
spring.security.user.name=temp
spring.security.user.password=temp

#Database/jpa configuration from https://www.callicoder.com/spring-boot-jpa-hibernate-postgresql-restful-crud-api-example/
#spring.datasource.url=jdbc:postgresql://localhost:5432/thirstycat
#spring.datasource.username=postgres
#spring.datasource.password=postgres1
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#spring.jpa.hibernate.ddl-auto=update

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/thirstyCat?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
spring.datasource.username = root
spring.datasource.password = bootboot


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


#Enable multipart data file uploads
#Following https://www.callicoder.com/spring-boot-file-upload-download-jpa-hibernate-mysql-database-example/
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB

#Deployment
server.port=${PORT:8080}

#Http -> https forwarding
server.use-forward-headers=true

#Disable default whitelable error page
server.error.whitelabel.enabled=false

